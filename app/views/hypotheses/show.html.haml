.small-page-header
  %h1
    %span.d-none.d-md-block
      Hypothesis:
.row
  = render partial: "/hypotheses/show_title", locals: {hypothesis: @hypothesis}
  -# Hide scoring! Keep it around as reference for now though
  -# - if @hypothesis.approved?
  -#   -# TODO: this is hacked to make sure it doesn't split into multiple lines. It would be great to handle that better
  -#   .col-xl.mt-4.mb-2{ style: "min-width: 330px;" }
  -#     .text-right.less-strong
  -#       .hypothesis-score
  -#         - quality_score = @hypothesis.user_scores.current.quality.where(user_id: current_user&.id).first
  -#         - if quality_score.present?
  -#           quality
  -#           <div class="current-avg less-strong">(<span>avg</span> #{@hypothesis.user_scores.quality.current_score})</div>:
  -#         - else
  -#           quality:
  -#         - Array(UserScore::MIN_SCORE..UserScore::MAX_SCORE).each do |score|
  -#           - active = quality_score&.score == score
  -#           - if quality_score.present? # Yah, I know, you could still make the form request manually, but who cares that much?
  -#             %span.score-item{class: (active ? "active" : "")}= score
  -#           - else
  -#             = button_to score, user_scores_path, {action: "create", params: {score: score, hypothesis_id: @hypothesis.ref_id, kind: "quality"}, class: "score-item btn btn-link #{active ? 'active' : ''}"}
  -#      .hypothesis-score.mt-2
  -#        - controversy_score = @hypothesis.user_scores.current.controversy.where(user_id: current_user&.id).first
  -#        - if controversy_score.present?
  -#          controversy
  -#          <div class="current-avg less-strong">(<span>avg</span> #{@hypothesis.user_scores.controversy.current_score})</div>:
  -#        - else
  -#          controversy:
  -#        - Array(UserScore::MIN_SCORE..UserScore::MAX_SCORE).each do |score|
  -#          - active = controversy_score&.score == score
  -#          - if controversy_score.present?
  -#            %span.score-item{class: (active ? "active" : "")}= score
  -#          - else
  -#            = button_to score, user_scores_path, {action: "create", params: {score: score, hypothesis_id: @hypothesis.ref_id, kind: "controversy"}, class: "score-item btn btn-link #{active ? 'active' : ''}"}
- if @explanations.any? || @unapproved_explanations
  .explanations-wrapper.row.mt-4.pb-4
    - @unapproved_explanations.each do |explanation|
      = render partial: "/hypothesis_explanations/show", locals: {explanation: explanation, unapproved_show: true, unapproved_show_linked: params[:explanation_id].present?}

    - @explanations.each do |explanation|
      = render partial: "/hypothesis_explanations/show", locals: {explanation: explanation}

.mt-5
-# ^ extra spacing
- if @hypothesis.approved?
  = link_to new_hypothesis_explanation_path(hypothesis_id: @hypothesis.ref_id), class: "btn btn-sm btn-outline-secondary" do
    - if @hypothesis.explanations.shown(current_user).count > 0
      Add another explanation
    - else
      Add explanation
.row.pt-2.mt-4
  - if @explanations.any?
    - @explanations.explanation_quotes.not_removed.ref_ordered.group_by(&:citation_id).each do |_citation_id, explanation_quotes|
      = render partial: "/hypotheses/show_citation_explanation_quotes", locals: {explanation_quotes: explanation_quotes}
  - else # Render the old school hypothesis citations
    - if @hypothesis_citations.no_approved_challenges.any?
      - @hypothesis_citations.no_approved_challenges.each do |hypothesis_citation|
        = render partial: "/hypotheses/show_hypothesis_citation", locals: {hypothesis_citation: hypothesis_citation, rendering_challenge: false}

  - if @hypothesis_citations.approved_challenges.any?
    %h2.mt-4.text-warning Challenged citations
    - @hypothesis_citations.approved_challenges.each do |hypothesis_citation|
      - challenges = hypothesis_citation.challenges.approved
      .row
        = render partial: "/hypotheses/show_hypothesis_citation", locals: {hypothesis_citation: hypothesis_citation, rendering_challenge: true}
        - challenges.each do |challenge|
          = render partial: "/hypotheses/show_hypothesis_citation", locals: {hypothesis_citation: challenge}

  - if @unapproved_hypothesis_citation.present?
    - if @unapproved_hypothesis_citation.waiting_on_github?
      .alert.alert-info.mt-4
        - if @unapproved_hypothesis_citation.pull_request_number.present?
          %h4
            Citation waiting on approval,
            = link_to "PR##{@unapproved_hypothesis_citation.pull_request_number}", @unapproved_hypothesis_citation.pull_request_url
        - else
          Waiting for pull request to be created, page will reload.
          -# if hypothesis hasn't been updated recently, skip this (something broke?)
          - if @unapproved_hypothesis_citation.updated_at > Time.current - 2.minutes
            :javascript
              window.setTimeout(() => {location.reload();}, 2000);
    - else
      %h3.text-warning
        Citation error, this shouldn't show up

.row.mt-big
  .col-md-6
    %table.table-list
      %tbody
        %tr
          %td Hypothesis
          %td= @hypothesis.title
        %tr
          %td Created
          %td
            %span.convertTime.preciseTime
              = l @hypothesis.created_at, format: :convert_time
        %tr
          %td ID
          %td
            = @hypothesis.ref_id
        - if display_dev_info?
          %tr.only-dev-visible.small
            %td ID
            %td
              = @hypothesis.id
          %tr.only-dev-visible
            %td slug
            %td= @hypothesis.to_param
        -# %tr
        -#   %td Score
        -#   %td
        -#     - if @hypothesis.approved?
        -#       %strong.score-bubble{class: hypothesis_score_class(@hypothesis.score)}
        -#         = @hypothesis.score
        -#     - unapproved_score = @hypothesis.unapproved_score
        -#     - if @hypothesis.unapproved? || @hypothesis.score < unapproved_score
        -#       %em.less-strong
        -#         when approved:
        -#       %span.score-bubble.small.less-strong{class: hypothesis_score_class(unapproved_score)}
        -#         = unapproved_score

        %tr
          %td GitHub
          %td
            - if @hypothesis.approved?
              = link_to @hypothesis.file_path.truncate(75), @hypothesis.github_html_url, title: @hypothesis.file_path
              - if @hypothesis.pull_request_number.present?
                %em.small.less-strong.d-block.mt-2
                  Approved by
                  = link_to "PR##{@hypothesis.pull_request_number}", @hypothesis.pull_request_url
                  - if @hypothesis.approved_at.present?
                    %span.convertTime.withPreposition
                      = l @hypothesis.approved_at, format: :convert_time
